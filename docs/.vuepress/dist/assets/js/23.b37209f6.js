(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{394:function(e,t,v){"use strict";v.r(t);var a=v(25),_=Object(a.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"浏览器的缓存策略"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的缓存策略"}},[e._v("#")]),e._v(" 浏览器的缓存策略")]),e._v(" "),v("ul",[v("li",[e._v("强制缓存")]),e._v(" "),v("li",[e._v("协商缓存")])]),e._v(" "),v("ol",[v("li",[e._v("先向内存或者硬盘中查找是否有对应的文件，找到后根据expire(绝对时间)判断是够过期，")]),e._v(" "),v("li",[e._v("Expires是http1.0的产物，后面增加了cache-control字段判断是够过期。")])]),e._v(" "),v("p",[e._v("cache-control")]),e._v(" "),v("ul",[v("li",[e._v("public   表明响应可以被任何对象缓存")]),e._v(" "),v("li",[e._v("private  表明响应只能被单个用户缓存，不能作为共享缓存")]),e._v(" "),v("li",[e._v("no-cache 不使用强制缓存")]),e._v(" "),v("li",[e._v("no-store 不使用任何缓存")]),e._v(" "),v("li",[e._v("max-age  设置缓存存储的最大周期")])]),e._v(" "),v("p",[e._v("最佳实践\n禁止缓存 cache-control: no-store"),v("br"),e._v("\n缓存静态资源 cache-control: public no-store"),v("br"),e._v("\n需要重新验证\nCache-Control: no-cache"),v("br"),e._v("\nCache-Control: max-age=0")]),e._v(" "),v("p",[e._v("以上为强制缓存，如果没有命中，则走协商缓存")]),e._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[e._v("先向服务器发送请求，headers携带If-Modified-Since 匹配文件时间  并且返回headers最新Last-Modified")]),e._v(" "),v("li",[e._v("根据请求headers if-none-match字段 etag来判断文件内容是否变化 响应header设置新的etag")]),e._v(" "),v("li",[e._v("如果以上命中就采用缓存 返回状态码304 然后浏览器再从缓存中读取文件")]),e._v(" "),v("li",[e._v("否则就返回新的文件")])])])}),[],!1,null,null,null);t.default=_.exports}}]);